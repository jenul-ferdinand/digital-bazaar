@startuml


class BazarDriver {
    + {static} void main(String[] args)
}

package Controllers {
    class Store {
        - ArrayList<Computer> computers
        - ArrayList<Printer> printers
        + void initStore(int numComputers, int numPrinters)
        + void createComputers()
        + void createPrinters()
        + void printComputers()
        + void printPrinters()
        + void runBazar()
    }
}

package Models {

    class Printer {
        - int ppm
        + int generateID()
        + int getPpm()
        + String toString()
    }

    class Computer {
        - String manufacture
        + int generateID()
        + String getManufacture()
        + void setManufacture(String manufacture)
        + String toString()
    }

    abstract class Device <<Abstract>> {
        - String name
        - String description
        + {abstract} int generateID()
        + String getName()
        + String getDescription()
        + void setName(String name)
        + void setDescription(String description)
        + String toString()
    }
}

package Utility {
    class MenuInput {
        + {static} int menuItem()
    }

    class Utils {
        + {static} int nextID(int low, int high)
    }
}


Printer -u-|> Device
Computer -u-|> Device

Printer "*" -r-> "1" Store : creates <
Computer "*" -l-> "1" Store : creates <

Printer ...> Utils : uses >
Computer ...>  Utils : uses >

BazarDriver "1" .u.> "1" Store : creates >
BazarDriver ...> MenuInput : uses >


@enduml