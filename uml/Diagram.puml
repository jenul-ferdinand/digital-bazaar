@startuml

skinparam linetype ortho
hide circle

class BazarDriver

package controllers {
    class Store

    class PurchaseManager

    interface IData <<interface>>
}

package models {
    abstract class Device <<abstract>>

    class Printer

    class Computer

    abstract class Purchase <<abstract>>

    class InStorePurchase

    class OnlinePurchase
}

package utility {
    class MenuManagerAdmin
    class MenuManagerEmployee
    interface IMenuManager <<interface>>

    class Utils

    enum PurchaseType <<enum>>
}


' === Associations ===

' Store creates Printer & Computer
Printer "0..*" <--- "1" Store : creates
Computer "0..*" <--- "1" Store : creates

' BazarDriver creates an instance of PurchaseManager
BazarDriver "1" ---> "1" PurchaseManager : creates

' PurchaseManager creates Purchase's
PurchaseManager "1" --> "0..*" Purchase : creates

' === Dependencies ===

' Printers uses Utils
Printer ..[#red].> Utils
' Computer uses Utils
Computer ..[#red].>  Utils
' Store uses Utils
Store ..[#red].> Utils

' BazarDriver creates an instance of Store
BazarDriver ....> Store
' BazarDriver creates an instance of IMenuManager
BazarDriver ....> IMenuManager

' Purchase depends on PurchaseType
Purchase .r.> PurchaseType

' === Realisations ===

' IMenuManager is realized by IMenuManager
MenuManagerAdmin ...|> IMenuManager
' IMenuManager is realized by MenuManagerEmployee
MenuManagerEmployee ...|> IMenuManager

' IData is realized by PurchaseManager
PurchaseManager ...|> IData


' === Generalisations ===

' Printer & Computer are generalised by Device
Printer --u-|> Device : <<extends>>
Computer --u-|> Device : <<extends>>

' OnlinePurchase and InStorePurchase are generalised by Purchase
OnlinePurchase --u-|> Purchase : <<extends>>
InStorePurchase --u-|> Purchase : <<extends>>



@enduml